# Generated by Django 5.2 on 2025-05-24 21:30

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CodigoVerificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('codigo', models.CharField(max_length=6)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('tipo', models.CharField(choices=[('comum', 'Comum'), ('medico', 'Médico')], max_length=20)),
                ('nome', models.CharField(blank=True, max_length=255)),
                ('cpf', models.CharField(max_length=11, unique=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('sexo', models.CharField(blank=True, max_length=20)),
                ('endereco', models.CharField(blank=True, max_length=255)),
                ('cidade', models.CharField(blank=True, max_length=100)),
                ('estado', models.CharField(blank=True, max_length=100)),
                ('telefone', models.CharField(blank=True, max_length=20)),
                ('crm', models.CharField(blank=True, max_length=20)),
                ('especialidade', models.CharField(blank=True, max_length=100)),
                ('google_access_token', models.TextField(blank=True, null=True)),
                ('google_refresh_token', models.TextField(blank=True, null=True)),
                ('google_token_expiry', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_hora', models.DateTimeField()),
                ('status', models.CharField(choices=[('solicitado', 'Agendamento Solicitado'), ('pendente', 'Pendente de Confirmação'), ('agendado', 'Agendado'), ('cancelado', 'Cancelado'), ('concluido', 'Concluído')], default='solicitado', max_length=10)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos_medico', to=settings.AUTH_USER_MODEL)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos_paciente', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AnexoAgendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', models.FileField(upload_to='anexos_agendamento/')),
                ('nome_arquivo', models.CharField(max_length=255)),
                ('data_upload', models.DateTimeField(default=django.utils.timezone.now)),
                ('agendamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anexos', to='core.agendamento')),
            ],
            options={
                'verbose_name': 'Anexo de Agendamento',
                'verbose_name_plural': 'Anexos de Agendamento',
            },
        ),
        migrations.CreateModel(
            name='HorarioAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('local', models.CharField(max_length=255)),
                ('dia_semana', models.CharField(choices=[('segunda', 'Segunda'), ('terca', 'Terça'), ('quarta', 'Quarta'), ('quinta', 'Quinta'), ('sexta', 'Sexta'), ('sabado', 'Sábado'), ('domingo', 'Domingo')], max_length=10)),
                ('horarios', models.JSONField()),
                ('indisponivel', models.BooleanField(default=False)),
                ('duracao_consulta_minutos', models.IntegerField(default=30)),
                ('intervalo_consulta_minutos', models.IntegerField(default=10)),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
